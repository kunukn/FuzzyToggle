{"version":3,"file":"FuzzyToggle.umd.js","sources":["../src/FuzzyToggle/createToggle.js"],"sourcesContent":["// Support browser or node env\r\nconst root = typeof window !== 'undefined' ? window : global;\r\nconst rAF = root.requestAnimationFrame\r\n  ? root.requestAnimationFrame.bind(root)\r\n  : callback => root.setTimeout(callback, 16);\r\nconst cAF = root.cancelAnimationFrame ? root.cancelAnimationFrame.bind(root) : root.clearInterval.bind(root);\r\n\r\nconst clamp = (value, min, max) => Math.min(Math.max(value, min), max);\r\nconst sanitizeVal = value => clamp(Math.round((value + 0.00001) * 100) / 100, 0, 1); // https://stackoverflow.com/a/11832950/815507\r\n\r\nconst COLLAPSED = 'collapsed';\r\nconst EXPANDED = 'expanded';\r\nconst EXPANDING = 'expanding';\r\nconst COLLAPSING = 'collapsing';\r\n\r\nconst getNow = Date.now;\r\n\r\nconst defaultParams = {\r\n  value: 0,\r\n  duration: 300,\r\n  trace: () => {}\r\n};\r\n\r\nlet isMoving = motion => motion === EXPANDING || motion === COLLAPSING;\r\nlet isCollapsedOrCollapsing = motion => motion === COLLAPSED || motion === COLLAPSING;\r\n\r\nlet initiateStateAndConfig = (params = {}) => {\r\n  let config = {\r\n    ...defaultParams,\r\n    ...params\r\n  };\r\n  config.duration = +config.duration;\r\n\r\n  let state = {\r\n    value: config.value === 1 ? 1 : 0,\r\n    motion: config.value === 1 ? EXPANDED : COLLAPSED,\r\n    cancelled: false,\r\n    isRunning: false,\r\n    startTime: getNow()\r\n  };\r\n  return [config, state];\r\n};\r\n\r\nfunction createToggle(params) {\r\n  let [config, state] = initiateStateAndConfig(params);\r\n\r\n  let getConfig = () => {\r\n    config.trace('getConfig');\r\n\r\n    let {duration, value} = config;\r\n\r\n    return {\r\n      duration, value\r\n    };\r\n  };\r\n\r\n  let setConfig = params => {\r\n    config.trace('setConfig');\r\n\r\n    if (state.isRunning) return;\r\n\r\n    let [updatedConfig, updatedState] = initiateStateAndConfig(params);\r\n\r\n    config = updatedConfig;\r\n    state = updatedState;\r\n\r\n    return true;\r\n  };\r\n\r\n  let onDone = () => {\r\n    config.trace('onDone');\r\n\r\n    if (config.onDone) {\r\n      let { value, motion, hasReversed } = state;\r\n      config.onDone({ value, motion, hasReversed });\r\n    }\r\n  };\r\n\r\n  let onUpdate = () => {\r\n    config.trace('onUpdate');\r\n\r\n    if (config.onUpdate) {\r\n      let { value, motion, hasReversed } = state;\r\n\r\n      config.onUpdate({ value, motion, hasReversed });\r\n    }\r\n  };\r\n\r\n  let onCancel = () => {\r\n    config.trace('onCancel');\r\n\r\n    if (config.onCancel) {\r\n      let { value, motion, hasReversed } = state;\r\n\r\n      config.onCancel({ value, motion, hasReversed });\r\n    }\r\n  };\r\n\r\n  let onReverse = () => {\r\n    config.trace('onReverse');\r\n\r\n    if (config.onReverse) {\r\n      let { value, motion } = state;\r\n\r\n      config.onReverse({ value, motion });\r\n    }\r\n  };\r\n\r\n  let getUpdate = () => {\r\n    let elapsedTime = getNow() - state.startTime;\r\n    let value = elapsedTime / config.duration;\r\n\r\n    value = sanitizeVal(isCollapsedOrCollapsing(state.motion) ? 1 - value : value);\r\n\r\n    let result = {\r\n      elapsedTime,\r\n      prevValue: state.value,\r\n      value\r\n    };\r\n    return result;\r\n  };\r\n\r\n  let run = () => {\r\n    if (state.cancelled) return;\r\n\r\n    let { value, prevValue, elapsedTime } = getUpdate();\r\n\r\n    // update\r\n    state.value = value;\r\n    state.elapsedTime = elapsedTime;\r\n\r\n    if (elapsedTime >= config.duration) {\r\n      if (prevValue !== value) onUpdate();\r\n\r\n      state.motion = isCollapsedOrCollapsing(state.motion) ? COLLAPSED : EXPANDED;\r\n      state.isRunning = false;\r\n      state.cAF = null;\r\n      onDone();\r\n    } else {\r\n      onUpdate();\r\n      state.cAF = rAF(run);\r\n    }\r\n  };\r\n\r\n  let toggle = () => {\r\n    config.trace('toggle');\r\n\r\n    if (config.duration <= 0) return;\r\n\r\n    state.cancelled = false;\r\n    state.isRunning = true;\r\n    state.hasReversed = isMoving(state.motion);\r\n    state.motion = isCollapsedOrCollapsing(state.motion) ? EXPANDING : COLLAPSING;\r\n\r\n    state.hasReversed && onReverse();\r\n\r\n    let now = getNow();\r\n\r\n    // update startTime\r\n    if (state.hasReversed) {\r\n      let { duration } = config;\r\n      let { startTime } = state;\r\n      let elapsedTime = Math.min(duration, now - startTime);\r\n      let subtract = Math.max(0, duration - elapsedTime);\r\n      state.startTime = now - subtract;\r\n    } else {\r\n      state.startTime = now;\r\n    }\r\n\r\n    onUpdate();\r\n    state.cAF = rAF(run);\r\n    return true;\r\n  };\r\n\r\n  let cancel = () => {\r\n    config.trace('cancel');\r\n\r\n    if (!state.isRunning) return;\r\n\r\n    state.cAF && cAF(state.cAF);\r\n\r\n    state.isRunning = false;\r\n\r\n    let motion = state.motion === EXPANDING ? COLLAPSED : EXPANDED;\r\n\r\n    state.motion = motion;\r\n    state.value = motion === COLLAPSED ? 0 : 1;\r\n    state.cancelled = true;\r\n\r\n    onCancel();\r\n    return true;\r\n  };\r\n\r\n  return { toggle, cancel, getConfig, setConfig };\r\n}\r\n\r\nexport default createToggle;\r\n"],"names":["root","window","global","rAF","requestAnimationFrame","bind","callback","setTimeout","cAF","cancelAnimationFrame","clearInterval","sanitizeVal","value","min","max","Math","clamp","round","COLLAPSED","EXPANDED","EXPANDING","COLLAPSING","getNow","Date","now","defaultParams","duration","trace","isMoving","motion","isCollapsedOrCollapsing","initiateStateAndConfig","params","config","cancelled","isRunning","startTime","state","onUpdate","hasReversed","run","elapsedTime","prevValue","getUpdate","onDone","toggle","onReverse","subtract","cancel","onCancel","getConfig","setConfig","updatedConfig","updatedState"],"mappings":"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"}